package com.academy.services;

import org.mariadb.jdbc.Connection;
import org.mariadb.jdbc.Statement;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Executes the statements and queries, managing a single connection to the database
 * @author Alexander Schilling
 */
public class DatabaseService {
    private static Connection connection;

    public static PreparedStatement getPreparedStatement(String sql) throws SQLException {
        return connection.prepareStatement(sql);
    }

    public static void connect(String ip, String database, String username, String password) throws SQLException {
        connection = (Connection) DriverManager.getConnection(
                String.format("jdbc:mariadb://%s/%s?user=%s&password=%s", ip, database, username, password)
        );
    }

    public static void disconnect() throws SQLException {
        connection.close();
    }

    public static ResultSet fetch(String query) throws SQLException {
        Statement stmt = connection.createStatement();
        ResultSet rs = stmt.executeQuery(query);
        stmt.close();
        return rs;
    }

    public static ResultSet fetch(PreparedStatement preparedStatement) throws SQLException {
        ResultSet rs = preparedStatement.executeQuery();
        preparedStatement.close();
        return rs;
    }

    public static boolean execute(String query) throws SQLException {
        Statement stmt = connection.createStatement();
        boolean success = stmt.execute(query);
        stmt.close();
        return success;
    }

    public static boolean execute(PreparedStatement preparedStatement) throws SQLException {
        boolean success = preparedStatement.execute();
        preparedStatement.close();
        return success;
    }

    public static PreparedStatement createPreparedStatement(String query) throws SQLException {
        return connection.prepareStatement(query);
    }

    public static PreparedStatement createPreparedStatement(String query, int autoGeneratedKeys) throws SQLException {
        return connection.prepareStatement(query, autoGeneratedKeys);
    }
}
